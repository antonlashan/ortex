{"version":3,"sources":["utils/regex.ts","components/rates/Rates.tsx","utils/dates.ts","components/reset-password/ResetPassword.tsx","layouts/basic/topbar/Topbar.tsx","layouts/basic/Basic.tsx","router/Router.tsx","theme/palette.ts","theme/index.ts","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["REG_EMAIL","useStyles","makeStyles","theme","root","display","alignItems","flexDirection","justifyContent","padding","spacing","borderRadius","price","currency","marginRight","priceUP","color","palette","secondary","main","backgroundColor","light","priceDOWN","warning","dark","Rates","classes","useState","datetime","updown","state","setSates","useEffect","socket","WebSocket","process","onopen","send","onmessage","event","timestamp","data","JSON","parse","topic","dt","Intl","DateTimeFormat","year","month","day","hour","minute","second","hour12","format","prev","onerror","error","console","log","close","className","clsx","Typography","variant","reset","cursor","actionPanel","ResetPassword","open","setOpen","showPassword","setShowPassword","useForm","mode","register","handleSubmit","errors","formState","watch","password","useRef","current","onSubmit","a","email","repeatPassword","handleClickShowPassword","handleClose","Link","onClick","Dialog","onClose","aria-labelledby","maxWidth","DialogTitle","id","DialogContent","e","preventDefault","TextField","size","type","undefined","helperText","message","margin","fullWidth","label","name","placeholder","autoFocus","inputRef","required","pattern","value","InputProps","endAdornment","InputAdornment","position","IconButton","aria-label","Visibility","VisibilityOff","validate","DialogActions","Button","disabled","isValid","flexGrow","title","textTransform","letterSpacing","Topbar","AppBar","Toolbar","content","height","background","default","Basic","children","Login","React","lazy","Router","fallback","exact","path","component","to","white","primary","contrastText","colors","grey","cyan","success","green","red","text","blueGrey","paper","createMuiTheme","zIndex","appBar","drawer","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc16eedd.chunk.js","sourcesContent":["export const REG_EMAIL = /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n","import { makeStyles, Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useEffect, useState } from 'react';\n\nimport { getFormattedDate } from '../../utils/dates';\n\ninterface SocketData {\n  price: number;\n  dt: number;\n  prev: number;\n  topic: string;\n}\n\ninterface RatesState {\n  price: number;\n  datetime: string;\n  updown: 'priceUP' | 'priceDOWN';\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: theme.spacing(0.5, 0, 0.5, 0),\n    borderRadius: 2,\n  },\n  price: {\n    padding: theme.spacing(0, 1, 0, 1),\n    display: 'flex',\n    alignItems: 'center',\n  },\n  currency: {\n    marginRight: theme.spacing(1),\n  },\n  priceUP: {\n    color: theme.palette.secondary.main,\n    backgroundColor: theme.palette.secondary.light,\n  },\n  priceDOWN: {\n    color: theme.palette.warning.dark,\n    backgroundColor: theme.palette.warning.light,\n  },\n}));\n\nconst currency = 'EURUSD';\n\nexport const Rates = () => {\n  const classes = useStyles();\n  const [state, setSates] = useState<RatesState>({\n    price: 0,\n    datetime: '',\n    updown: 'priceUP',\n  });\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const socket = new WebSocket(process.env.REACT_APP_WS!);\n\n    socket.onopen = () => {\n      socket.send(`{\"topic\": \"subscribe\", \"to\": \"${currency}:CUR\"}`);\n    };\n\n    socket.onmessage = (event) => {\n      const data = JSON.parse(event.data) as SocketData;\n      if (data.topic === currency) {\n        // console.log(data.prev , data.price)\n        setSates({\n          price: data.price,\n          datetime: getFormattedDate(data.dt),\n          updown: data.prev < data.price ? 'priceUP' : 'priceDOWN',\n        });\n      }\n    };\n\n    socket.onerror = function (error) {\n      console.log(error);\n    };\n\n    return () => {\n      console.log('close');\n      socket.close();\n    };\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <div className={clsx(classes.price, classes[state.updown])}>\n        <Typography className={classes.currency} variant='overline'>\n          {currency}\n        </Typography>\n        <Typography variant='subtitle2'>{state.price}</Typography>\n      </div>\n      <div>\n        <Typography className={classes.currency} variant='overline'>\n          Now\n        </Typography>\n        <Typography variant='overline'>{state.datetime}</Typography>\n      </div>\n    </div>\n  );\n};\n","export const getFormattedDate = (timestamp: number) => {\n  const options = {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n    hour12: true,\n  };\n  return new Intl.DateTimeFormat('default', options).format(timestamp);\n};\n","import {\n  TextField,\n  Button,\n  Dialog,\n  Link,\n  makeStyles,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  InputAdornment,\n  IconButton,\n} from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport React, { useRef, useState } from 'react';\nimport { useForm } from 'react-hook-form';\n\nimport { REG_EMAIL } from '../../utils/regex';\n\ntype PasswordChangeFormData = {\n  email: string;\n  password: string;\n  repeatPassword: string;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  reset: {\n    cursor: 'pointer',\n  },\n  actionPanel: {\n    padding: theme.spacing(2, 0, 2, 0),\n  },\n}));\n\nexport const ResetPassword = () => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [showPassword, setShowPassword] = useState<boolean>(false);\n  const {\n    register,\n    handleSubmit,\n    errors,\n    formState,\n    watch,\n  } = useForm<PasswordChangeFormData>({\n    mode: 'onChange',\n  });\n  const password = useRef({});\n  password.current = watch('password', '');\n\n  const onSubmit = async ({\n    email,\n    password,\n    repeatPassword,\n  }: PasswordChangeFormData) => {\n    console.log({ email, password, repeatPassword });\n    setOpen(false);\n  };\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    handleSubmit(onSubmit)();\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Link className={classes.reset} variant='body2' onClick={handleClickOpen}>\n        Reset password\n      </Link>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby='form-dialog-title'\n        maxWidth={'xs'}\n      >\n        <DialogTitle id='form-dialog-title'>Password Reset</DialogTitle>\n        <DialogContent>\n          <form onSubmit={handleFormSubmit}>\n            <TextField\n              size='small'\n              type='email'\n              error={errors.email !== undefined}\n              helperText={errors.email?.message}\n              variant='outlined'\n              margin='normal'\n              fullWidth\n              label='Email'\n              name='email'\n              placeholder='abcd@abc.com'\n              autoFocus\n              inputRef={register({\n                required: 'Email is required',\n                pattern: {\n                  value: REG_EMAIL,\n                  message: 'Invalid email address',\n                },\n              })}\n            />\n            <TextField\n              size='small'\n              error={errors.password !== undefined}\n              helperText={errors.password?.message}\n              variant='outlined'\n              margin='normal'\n              type={showPassword ? 'text' : 'password'}\n              fullWidth\n              name='password'\n              placeholder='*******'\n              label='Password'\n              inputRef={register({\n                required: 'Password is required',\n              })}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position='end'>\n                    <IconButton\n                      aria-label='toggle password visibility'\n                      onClick={handleClickShowPassword}\n                    >\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n            <TextField\n              size='small'\n              error={errors.repeatPassword !== undefined}\n              helperText={errors.repeatPassword?.message}\n              variant='outlined'\n              margin='normal'\n              type={showPassword ? 'text' : 'password'}\n              fullWidth\n              name='repeatPassword'\n              placeholder='*******'\n              label='Repeat password'\n              inputRef={register({\n                required: 'Repeat password is required',\n                validate: (value) =>\n                  value === password.current || 'The passwords do not match',\n              })}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position='end'>\n                    <IconButton\n                      aria-label='toggle password visibility'\n                      onClick={handleClickShowPassword}\n                    >\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n\n            <DialogActions className={classes.actionPanel}>\n              <Button onClick={handleClose} color='primary'>\n                Cancel\n              </Button>\n              <Button\n                type='submit'\n                variant='contained'\n                color='secondary'\n                disabled={!formState.isValid}\n              >\n                Reset\n              </Button>\n            </DialogActions>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n};\n","import { AppBar, Toolbar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Rates } from '../../../components';\n\nconst useStyles = makeStyles(() => ({\n  flexGrow: {\n    flexGrow: 1,\n  },\n  title: {\n    textTransform: 'uppercase',\n    letterSpacing: '3px',\n  },\n}));\n\nconst Topbar = () => {\n  const classes = useStyles();\n\n  return (\n    <AppBar>\n      <Toolbar>\n        <Typography className={classes.title} variant='h6'>\n          Ortex\n        </Typography>\n        <div className={classes.flexGrow} />\n        <Rates />\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport { Topbar };\n","import { makeStyles } from '@material-ui/core';\nimport React, { ReactNode } from 'react';\n\nimport { Topbar } from './topbar/Topbar';\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    height: '100%',\n    padding: theme.spacing(2),\n    backgroundColor: theme.palette.background.default,\n  },\n}));\n\nconst Basic = ({ children }: { children: ReactNode }) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Topbar />\n      <div className={classes.content}>{children}</div>\n    </>\n  );\n};\n\nexport { Basic };\n","import React, { Suspense } from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\n\nimport { BasicLayout } from '../layouts/basic';\n\nconst Login = React.lazy(() => import('../views/login/Login'));\n\nexport const Router = () => {\n  return (\n    <BrowserRouter>\n      <BasicLayout>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Switch>\n            <Route exact path={'/login'} component={Login} />\n            <Redirect to={'/login'} />\n          </Switch>\n        </Suspense>\n      </BasicLayout>\n    </BrowserRouter>\n  );\n};\n","import { colors } from '@material-ui/core';\nimport { PaletteOptions } from '@material-ui/core/styles/createPalette';\n\nconst white = '#FFFFFF';\n\nexport const palette: PaletteOptions = {\n  primary: {\n    contrastText: white,\n    dark: colors.grey[900],\n    main: colors.grey['A400'],\n    light: colors.grey[50],\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.cyan[900],\n    main: '#01BFBD',\n    light: '#01bfbd2e',\n  },\n  success: {\n    contrastText: white,\n    dark: 'rgb(30, 70, 32)',\n    main: colors.green[600],\n    light: 'rgb(237, 247, 237)',\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400],\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: '#6b6b6b',\n  },\n  background: {\n    default: '#f5f5f5',\n    paper: white,\n  },\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport { palette } from './palette';\n\nconst theme = createMuiTheme({\n  palette,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100,\n  },\n});\n\nexport { theme };\n","import { ThemeProvider } from '@material-ui/core';\n\nimport { Router } from '../router';\nimport { theme } from '../theme';\nimport './App.css';\n\nexport const App = () => (\n  <ThemeProvider theme={theme}>\n    <Router />\n  </ThemeProvider>\n);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport 'typeface-roboto';\nimport { App } from './app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}