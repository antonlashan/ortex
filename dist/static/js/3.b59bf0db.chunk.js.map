{"version":3,"sources":["views/login/Login.tsx","../node_modules/@material-ui/core/esm/Container/Container.js","../node_modules/@material-ui/core/esm/CssBaseline/CssBaseline.js"],"names":["useStyles","makeStyles","theme","form","width","submit","margin","spacing","container","flexDirection","display","justifyContent","height","paper","alignItems","marginTop","border","palette","primary","main","padding","borderRadius","header","marginBottom","textAlign","headerImg","filter","Login","useForm","mode","register","handleSubmit","errors","formState","useState","showPassword","setShowPassword","onSubmit","a","email","password","console","log","classes","component","maxWidth","className","src","e","preventDefault","type","error","undefined","helperText","message","variant","fullWidth","label","name","placeholder","autoFocus","inputRef","required","pattern","value","REG_EMAIL","InputProps","endAdornment","position","aria-label","onClick","color","disabled","isValid","size","Container","React","props","ref","_props$component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","other","_objectWithoutProperties","_extends","clsx","root","concat","capitalize","String","withStyles","_defineProperty","marginLeft","boxSizing","marginRight","paddingLeft","paddingRight","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","html","WebkitFontSmoothing","MozOsxFontSmoothing","body","text","typography","body2","backgroundColor","background","default","common","white","fontWeight","fontWeightBold","_props$children","children"],"mappings":"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","file":"static/js/3.b59bf0db.chunk.js","sourcesContent":["import {\n  Button,\n  Container,\n  CssBaseline,\n  makeStyles,\n  TextField,\n  IconButton,\n  InputAdornment,\n} from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\n\nimport { ResetPassword } from '../../components';\nimport { REG_EMAIL } from '../../utils/regex';\n\ntype FormData = {\n  email: string;\n  password: string;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: '100%', // Fix IE 11 issue.\n  },\n  submit: {\n    margin: theme.spacing(2, 0, 2),\n  },\n  container: {\n    flexDirection: 'column',\n    display: 'flex',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: 40,\n    border: `2px solid ${theme.palette.primary.main}`,\n    padding: theme.spacing(3),\n    borderRadius: 2,\n  },\n  header: {\n    marginBottom: theme.spacing(1),\n    textAlign: 'center',\n  },\n  headerImg: {\n    width: '50%',\n    filter: 'invert(1)',\n  },\n}));\n\nconst Login = () => {\n  const { register, handleSubmit, errors, formState } = useForm<FormData>({\n    mode: 'onChange',\n  });\n  const [showPassword, setShowPassword] = useState<boolean>(false);\n\n  const onSubmit = async ({ email, password }: FormData) => {\n    console.log({ email, password });\n  };\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    handleSubmit(onSubmit)();\n  };\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <Container component='main' maxWidth='xs' className={classes.container}>\n        <CssBaseline />\n        <div className={classes.paper}>\n          <div className={classes.header}>\n            <img\n              className={classes.headerImg}\n              src='https://ortex-static-files.s3.amazonaws.com/static/public/images/ortex_logo_v-white.svg'\n            />\n          </div>\n          <form className={classes.form} onSubmit={handleFormSubmit}>\n            <TextField\n              type='email'\n              error={errors.email !== undefined}\n              helperText={errors.email?.message}\n              variant='outlined'\n              margin='normal'\n              fullWidth\n              label='Email'\n              name='email'\n              placeholder='abcd@abc.com'\n              autoFocus\n              inputRef={register({\n                required: 'Email is required',\n                pattern: {\n                  value: REG_EMAIL,\n                  message: 'Invalid email address',\n                },\n              })}\n            />\n            <TextField\n              error={errors.password !== undefined}\n              helperText={errors.password?.message}\n              variant='outlined'\n              margin='normal'\n              type={showPassword ? 'text' : 'password'}\n              fullWidth\n              name='password'\n              placeholder='*******'\n              label='Password'\n              inputRef={register({\n                required: 'Password is required',\n              })}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position='end'>\n                    <IconButton\n                      aria-label='toggle password visibility'\n                      onClick={handleClickShowPassword}\n                    >\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n\n            <Button\n              type='submit'\n              fullWidth\n              variant='contained'\n              color='secondary'\n              className={classes.submit}\n              disabled={!formState.isValid}\n              size={'large'}\n            >\n              Login\n            </Button>\n          </form>\n          <ResetPassword />\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default Login;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { exactProp } from '@material-ui/utils';\nexport var html = {\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box'\n};\nexport var body = function body(theme) {\n  return _extends({\n    color: theme.palette.text.primary\n  }, theme.typography.body2, {\n    backgroundColor: theme.palette.background.default,\n    '@media print': {\n      // Save printer ink.\n      backgroundColor: theme.palette.common.white\n    }\n  });\n};\nexport var styles = function styles(theme) {\n  return {\n    '@global': {\n      html: html,\n      '*, *::before, *::after': {\n        boxSizing: 'inherit'\n      },\n      'strong, b': {\n        fontWeight: theme.typography.fontWeightBold\n      },\n      body: _extends({\n        margin: 0\n      }, body(theme), {\n        // Add support for document.body.requestFullScreen().\n        // Other elements, if background transparent, are not supported.\n        '&::backdrop': {\n          backgroundColor: theme.palette.background.default\n        }\n      })\n    }\n  };\n};\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\n\nfunction CssBaseline(props) {\n  /* eslint-disable no-unused-vars */\n  var _props$children = props.children,\n      children = _props$children === void 0 ? null : _props$children,\n      classes = props.classes;\n  /* eslint-enable no-unused-vars */\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  CssBaseline['propTypes' + ''] = exactProp(CssBaseline.propTypes);\n}\n\nexport default withStyles(styles, {\n  name: 'MuiCssBaseline'\n})(CssBaseline);"],"sourceRoot":""}